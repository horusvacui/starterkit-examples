#N canvas 0 22 838 572 10;
#X obj 459 47 cnv 15 200 380 empty empty empty 20 12 0 14 -228992 -66577
0;
#X obj 460 349 cnv 15 100 60 empty empty empty 20 12 0 14 -195568 -66577
0;
#N canvas 0 22 450 300 gemwin 0;
#X obj 132 136 gemwin;
#X obj 67 89 outlet;
#X obj 67 10 inlet;
#X msg 67 70 set destroy;
#X msg 132 112 create \, 1;
#X msg 198 112 destroy;
#X msg 156 71 set create;
#X obj 67 41 route create;
#X connect 2 0 7 0;
#X connect 3 0 1 0;
#X connect 4 0 0 0;
#X connect 5 0 0 0;
#X connect 6 0 1 0;
#X connect 7 0 3 0;
#X connect 7 0 4 0;
#X connect 7 1 6 0;
#X connect 7 1 5 0;
#X restore 465 388 pd gemwin;
#X msg 465 369 destroy;
#X text 461 348 Create window:;
#X obj 461 53 gemhead;
#X obj 461 270 pix_texture;
#X floatatom 473 160 3 0 100 2 threshold - -;
#X obj 473 177 / 100;
#X obj 461 292 square 4;
#X msg 473 198 treshold \$1;
#X floatatom 563 160 3 0 100 2 blobsize - -;
#X obj 563 177 / 100;
#X msg 563 198 blobSize \$1;
#X text 34 306 Inlet 1: treshold <float>: minimum luminance of a pixel
to be considered part of a blob. (default=0.04);
#X text 34 335 Inlet 1: blobSize <float>: minimum relative size of
a blob. (default=0.1);
#X text 27 113 a "blob" is a number of adjacent(!) pixels with a luminance
that is bigger than the value defined by "treshold". you can set the
minimum size of a blob that is needed to be detected.;
#X floatatom 573 296 5 0 0 1 x - -;
#X floatatom 574 312 5 0 0 1 y - -;
#X floatatom 574 328 5 0 0 1 size - -;
#X floatatom 575 344 5 0 0 1 minX - -;
#X floatatom 575 360 5 0 0 1 minY - -;
#X floatatom 576 376 5 0 0 1 maxX - -;
#X floatatom 576 392 5 0 0 1 maxY - -;
#X floatatom 577 408 5 0 0 1 area - -;
#N canvas 448 165 687 354 showblob 0;
#X obj 67 86 inlet blobinformation;
#X msg 67 114 \$3 \$4 \$5 \$6 \$7 \$8 \$9 \$10;
#X obj 67 138 unpack 0 0 0 0 0 0 0 0;
#X obj 67 167 outlet weightedX;
#X obj 88 187 outlet weightedY;
#X obj 109 207 outlet weightedSize;
#X obj 156 236 outlet minX;
#X obj 177 256 outlet minY;
#X obj 243 236 outlet maxX;
#X obj 260 256 outlet maxY;
#X obj 348 238 outlet size;
#X text 60 45 this extracts information of the 1st detected blob;
#N canvas 516 205 465 531 rectangle 0;
#X obj 68 75 inlet;
#X obj 215 -1 inlet;
#X obj 66 320 rectangle;
#X obj 68 234 translateXYZ;
#X obj 215 69 unpack 0 0 0 0;
#X obj 215 94 +;
#X obj 254 95 +;
#X text 248 125 0..2;
#X text 250 145 -1..+1;
#X obj 340 148 -;
#X obj 377 149 -;
#X obj 193 124 - 1;
#X obj 193 147 * 4;
#X obj 222 123 - 1;
#X obj 222 146 * 4;
#X obj 340 180 * -4;
#X obj 377 180 * -4;
#X msg 28 270 draw line;
#X obj 12 251 loadbang;
#X obj 67 296 color 1 0 0;
#X connect 0 0 3 0;
#X connect 1 0 4 0;
#X connect 3 0 19 0;
#X connect 4 0 5 0;
#X connect 4 0 9 0;
#X connect 4 1 5 1;
#X connect 4 1 9 1;
#X connect 4 2 6 0;
#X connect 4 2 10 0;
#X connect 4 3 6 1;
#X connect 4 3 10 1;
#X connect 5 0 11 0;
#X connect 6 0 13 0;
#X connect 9 0 15 0;
#X connect 10 0 16 0;
#X connect 11 0 12 0;
#X connect 12 0 3 1;
#X connect 13 0 14 0;
#X connect 14 0 3 2;
#X connect 15 0 2 1;
#X connect 16 0 2 2;
#X connect 17 0 2 0;
#X connect 18 0 17 0;
#X connect 19 0 2 0;
#X restore 346 188 pd rectangle;
#X obj 346 117 color 1 1 1 0.5;
#X obj 346 96 gemhead 70;
#X obj 346 138 alpha;
#X msg 425 164 \$6 \$8 \$7 \$9;
#X connect 0 0 1 0;
#X connect 0 0 16 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 2 1 4 0;
#X connect 2 2 5 0;
#X connect 2 3 6 0;
#X connect 2 4 7 0;
#X connect 2 5 8 0;
#X connect 2 6 9 0;
#X connect 2 7 10 0;
#X connect 13 0 15 0;
#X connect 14 0 13 0;
#X connect 15 0 12 0;
#X connect 16 0 12 1;
#X restore 551 271 pd showblob 1;
#X obj 461 232 pix_multiblob 6;
#X obj 403 183 pix_video;
#X connect 2 0 3 0;
#X connect 3 0 2 0;
#X connect 5 0 27 0;
#X connect 6 0 9 0;
#X connect 7 0 8 0;
#X connect 8 0 10 0;
#X connect 10 0 26 0;
#X connect 11 0 12 0;
#X connect 12 0 13 0;
#X connect 13 0 26 0;
#X connect 25 0 17 0;
#X connect 25 1 18 0;
#X connect 25 2 19 0;
#X connect 25 3 20 0;
#X connect 25 4 21 0;
#X connect 25 5 22 0;
#X connect 25 6 23 0;
#X connect 25 7 24 0;
#X connect 26 0 6 0;
#X connect 26 1 25 0;
#X connect 27 0 26 0;
